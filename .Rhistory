load(file = here('Data/known_mortality_cleaned.RData'))
### Set infanticide as intercept for modeling
known.mortality$mortality.model <- factor(known.mortality$mortality, levels = c('infanticide', 'lion', 'other', 'siblicide', 'death of mother', 'starvation', 'human'))
################################################################################
### Does prey density vary by mortality source?
prey_mod <- brm(data = known.mortality[!is.na(known.mortality$prey_density),], prey_density ~ 1 + mortality.model + (1|clan),
control = list(adapt_delta = 0.99), save_all_pars = TRUE)
known.mortality
known.mortality$prey_density
##### Split into mortality with known and unknown sources
known.mortality <- filter(all.mortality, mortality != 'unknown')
load(file = here('Data/cub_data.RData'))
filter(all.mortality, mortality != 'unknown')
all.mortality$prey_density
##### Split into mortality with known and unknown sources
known.mortality <- filter(all.mortality, mortality != 'unknown')
known.mortality$prey_density
library(dplyr)
unknown.mortality <- filter(all.mortality, mortality == 'unknown')
unknown.mortality$prey_density
nrow(known.mortality)
known.mortality[!is.na(known.mortality$prey_density),]
load(file = here('Data/cub_data.RData'))
filter(all.mortality, mortality != 'unknown')
rm(list = ls())
hyenadata::update_tables('1.2.88')
library(hyenadata)  ### Version 1.2.88
library(dplyr)
library(here)
source('000.functions.R')
data("tblHyenas")
data("tblLifeHistory.wide")
data("tblFemaleRanks")
data('tblSessions')
data('tblHyenasPerSession')
data('tblPreyCensus')
infanticide_notes <- read.csv("Data/infanticide_notes.csv")
infanticide_notes$Date <- as.Date(infanticide_notes$Date, format = '%m/%d/%y')
### Table of cleaned mortality data
cleaned.mortality <- read.csv(here('Data/known_mortality.csv'))
infanticide_notes$Date
### Table of cleaned mortality data
cleaned.mortality <- read.csv(here('Data/known_mortality.csv'))
cleaned.mortality$birthdate
as.Date(cleaned.mortality$birthdate, format = '%m/%d/%Y')
cleaned.mortality$birthdate <- as.Date(cleaned.mortality$birthdate, format = '%m/%d/%y')
cleaned.mortality$birthdate
###############################################################################
## Extract mortality and cub info
rm(list = ls())
hyenadata::update_tables('1.2.88')
library(hyenadata)  ### Version 1.2.88
library(dplyr)
library(here)
source('000.functions.R')
data("tblHyenas")
data("tblLifeHistory.wide")
data("tblFemaleRanks")
data('tblSessions')
data('tblHyenasPerSession')
data('tblPreyCensus')
infanticide_notes <- read.csv("Data/infanticide_notes.csv")
infanticide_notes$Date <- as.Date(infanticide_notes$Date, format = '%m/%d/%y')
### Table of cleaned mortality data
cleaned.mortality <- read.csv(here('Data/known_mortality.csv'))
## Combine rare mortality into an 'other' category
cleaned.mortality[cleaned.mortality$mortality %in% c('illness', 'flooded den'),]$mortality <- 'other'
names(cleaned.mortality)
cleaned.mortality$birthdate <- as.Date(cleaned.mortality$birthdate, format = '%m/%d/%y')
cleaned.mortality$disappeared <- as.Date(cleaned.mortality$disappeared, format = '%m/%d/%y')
###############################################################################
### Table of all mortality
all.mortality <- filter(tblLifeHistory.wide, disappeared <= (dob + 365),
disappeared < '2019-01-01')
## Restrict to study clans
all.mortality <- filter(all.mortality, dob_event_data %in% c('talek', 'pond', 'kcm', 'fig.tree', 'mara.river', 'happy.zebra', 'serena.n', 'serena.s', 'oltukai', 'airstrip'))
## Number of sessions
## Masai mara
length(unique(filter(tblSessions, clan  %in% c('talek', 'pond', 'kcm', 'fig.tree', 'mara.river', 'happy.zebra', 'serena.n', 'serena.s'),
date <= '2018-12-31')$session))
## Amboseli
length(unique(filter(tblSessions, clan  %in% c('amboseli'))$session))
## remove some individuals with incorrect dates or who are unverified
all.mortality <- filter(all.mortality, !id %in% c('grig', 'lb', 'mc2', 'mc3', '44', 'aber', 'mbrk', 'sdc'))
## remove dummy cubs
all.mortality <- filter(all.mortality, !grepl('dc[0-9]', id))
all.mortality <- left_join(all.mortality, tblHyenas[,c('id', 'sex', 'mom')])
all.mortality$age_at_death <- as.numeric((all.mortality$disappeared - all.mortality$dob)/30.4375)
all.mortality$mom_disappeared <- left_join(all.mortality, tblLifeHistory.wide, by = c('mom' = 'id'))$disappeared.y
all.mortality$mom_disappeared <- (all.mortality$mom_disappeared < all.mortality$disappeared) & !is.na(all.mortality$mom_disappeared)
all.mortality <- all.mortality %>%
select(id, disappeared, dob, dob_event_data, disappeared_event_data, sex, mom, mom_disappeared, age_at_death) %>%
rename(mortality = disappeared_event_data, clan = dob_event_data, birthdate = dob)
all.mortality <- all.mortality[,c('id', 'sex', 'disappeared', 'mom', 'birthdate',
'mortality', 'clan', 'mom_disappeared', 'age_at_death')]
unknown.mortality <- filter(all.mortality, !id %in% cleaned.mortality$id)
## Remove mc2 and mc3, who are unverifiable hyenas
unknown.mortality <- filter(unknown.mortality, !id %in% c('mc2', 'mc3'))
unique(unknown.mortality$mortality) ## Make sure these are all different versions of unknown.
unknown.mortality$mortality <- 'unknown'
#### Finalize large dataset
all.mortality <- rbind(unknown.mortality, cleaned.mortality)
all.mortality[all.mortality$sex%in% c('u', '') & !is.na(all.mortality$sex),'sex'] <- NA
### Ensure clan names for tblPreyCensus match cub mortality table
tblPreyCensus$clan[tblPreyCensus$clan == 'talek.w'] <- 'talek'
all.mortality$prey_density <- get_prey_density(all.mortality$disappeared, all.mortality$clan, time.period = -(365.25/12))
### Get number of cubs at den in month prior to death
all.mortality$cub_associates <- get_cub_associates(all.mortality$id, all.mortality$disappeared, time.period = -(365.25/12))
save(all.mortality, tblFemaleRanks, infanticide_notes, file = here('Data/cub_data.RData'))
library(brms)
library(dplyr)
library(tidyr)
library(here)
library(grid)
library(ggridges)
library(ggplot2)
library(gridExtra)
set.seed(1989)
options(stringsAsFactors = FALSE)
################################################################################
### Load data for analysis
rm(list = ls())
load(file = here('Data/cub_data.RData'))
##### Split into mortality with known and unknown sources
known.mortality <- filter(all.mortality, mortality != 'unknown')
unknown.mortality <- filter(all.mortality, mortality == 'unknown')
## For estimating frequency of different types of mortality, divide mortality
## based on whether mother preceded offspring in death. Assign 'death of mother'
## to be it's own type of mortality, even superseding other causes.
known.mortality[is.na(known.mortality$mom_disappeared),'mom_disappeared'] <- FALSE
known.mortality[known.mortality$mom_disappeared,]$mortality <- 'death of mother'
## unknown mortality when mother precedes offspring in death
um.death.of.mother <- filter(unknown.mortality, mom_disappeared == TRUE)
um.death.of.mother$mortality <- 'death of mother'
unknown.mortality <- filter(unknown.mortality, mom_disappeared == FALSE)
known.mortality$infanticide <- as.numeric(known.mortality$mortality == 'infanticide')
known.mortality$starvation <- as.numeric(known.mortality$mortality == 'starvation')
known.mortality$lion <- as.numeric(known.mortality$mortality == 'lion')
known.mortality$human <- as.numeric(known.mortality$mortality == 'human')
known.mortality$siblicide <- as.numeric(known.mortality$mortality == 'siblicide')
known.mortality$other <- as.numeric(known.mortality$mortality == 'other')
known.mortality$y <- as.matrix(known.mortality[,c('infanticide', 'starvation', 'lion', 'siblicide',
'human','other')])
known.mortality.mom.alive <- filter(known.mortality, mom_disappeared == FALSE)
nrow(known.mortality.mom.alive)
save(known.mortality, file = 'Data/known_mortality_cleaned.RData')
################################################################################
### Load data for analysis
rm(list = ls())
load(file = here('Data/known_mortality_cleaned.RData'))
### Set infanticide as intercept for modeling
known.mortality$mortality.model <- factor(known.mortality$mortality, levels = c('infanticide', 'lion', 'other', 'siblicide', 'death of mother', 'starvation', 'human'))
################################################################################
### Does prey density vary by mortality source?
prey_mod <- brm(data = known.mortality[!is.na(known.mortality$prey_density),], prey_density ~ 1 + mortality.model + (1|clan),
control = list(adapt_delta = 0.99), save_all_pars = TRUE)
prey_null_mod <- brm(data = known.mortality[!is.na(known.mortality$prey_density),], prey_density ~ 1 + (1|clan),
control = list(adapt_delta = 0.99), save_all_pars = TRUE)
## Model comparison
loo(prey_mod, prey_null_mod, moment_match = TRUE)
cub_density_mod <- brm(data = known.mortality[!is.na(known.mortality$cub_associates),], cub_associates ~ 1 + mortality + (1|clan),
control = list(adapt_delta = 0.99))
cub_null_mod <- brm(data = known.mortality[!is.na(known.mortality$cub_associates),], cub_associates ~ 1 + (1|clan),
control = list(adapt_delta = 0.99))
## Model comparison
loo(cub_density_mod, cub_null_mod)
save(prey_mod, prey_null_mod, cub_density_mod, cub_null_mod, file = 'Data/prey_and_cub_models.RData')
png(file = 'Plots/prey_and_cub_mortality.png', width = 3.5, height = 5)
prey + cubs + plot_layout(ncol = 1)
dev.off()
################################################################################
### Do the ranks of killers and mothers of victims differ?
### Examine ranks of killers and victims. Use table of qualitative data on
#   infanticide events
### add year to infanticide data
tblFemaleRanks$year <- as.numeric(tblFemaleRanks$year)
tblFemaleRanks$stan_rank <- as.numeric(tblFemaleRanks$stan_rank)
infanticide_notes$Mom_rank <- NA
infanticide_notes$Killer_rank <- NA
### Add killer and mother ranks
for(i in 1:nrow(infanticide_notes)){
mom <- infanticide_notes$Mom[i]
killer <- infanticide_notes$Killers[i]
date <- infanticide_notes$Date[i]
###mom rank
if(mom %in% filter(tblFemaleRanks, year == infanticide_notes[i,'Year'])$id){
infanticide_notes$Mom_rank[i] <- filter(tblFemaleRanks, year == infanticide_notes[i,'Year'],
id == mom)$stan_rank
}
##killer rank
if(killer %in% filter(tblFemaleRanks, year == infanticide_notes[i,'Year'])$id){
infanticide_notes$Killer_rank[i] <- filter(tblFemaleRanks, year == infanticide_notes[i,'Year'],
id == killer)$stan_rank
}
}
### Statistical test comparing ranks of killers and mothers
t.test(infanticide_notes$Mom_rank[!is.na(infanticide_notes$Mom_rank)],
infanticide_notes$Killer_rank[!is.na(infanticide_notes$Killer_rank)])
### Prep data for plotting
mom.killer.rank <- rbind(data.frame(whose = rep('mom'),
rank = infanticide_notes$Mom_rank),
data.frame(whose = rep('killer'),
rank = infanticide_notes$Killer_rank))
mom.killer.rank$whose <-factor(mom.killer.rank$whose, levels = c('killer', 'mom'))
labs = c('Killer', 'Mother of victim')
labs = paste0(labs, '\n(n = ', table(na.omit(mom.killer.rank)$whose), ')')
mom.killer.rank$whose <-factor(mom.killer.rank$whose, levels = c('killer', 'mom'),
labels = labs)
################################################################################
### Plotting
png(file = 'Plots/Killer_rank.png',width = 3.5, height = 3.5,
units = 'in', res = 400)
ggplot(mom.killer.rank, aes(x = whose, y= rank))+
geom_boxplot(color = 'grey30', size= 1, fill = 'grey85')+
theme_classic(base_size = 14)+
xlab("")+
ylab("Standardized Rank\n(Low)                                 (High)")+
scale_x_discrete()
dev.off()
#### Plotting
known.mortality$mortality.plot <- factor(known.mortality$mortality, levels = c('death of mother', 'infanticide', 'lion', 'starvation', 'siblicide', 'human', 'other'))
prey <- ggplot(data = known.mortality, aes(x = mortality.plot, y = prey_density))+
geom_boxplot(outlier.color = NA)+
theme_classic(base_size = 14) +
coord_cartesian(ylim= c(0,800))+
ylab('Average prey density')+
xlab('Mortality source')
cubs <- ggplot(data = known.mortality, aes(x = mortality.plot, y = cub_associates))+
geom_boxplot(outlier.color = NA)+
theme_classic(base_size = 14)+
ylab('Average number of cubs observed')+
xlab('Mortality source')
png(file = 'Plots/prey_and_cub_mortality.png', width = 3.5, height = 5)
prey + cubs + plot_layout(ncol = 1)
dev.off()
prey + cubs + plot_layout(ncol = 1)
png(file = 'Plots/prey_and_cub_mortality.png', width = 3.5, height = 5,
units = 'in', res = 400)
prey + cubs + plot_layout(ncol = 1)
dev.off()
png(file = 'Plots/prey_and_cub_mortality.png', width = 5, height = 7,
units = 'in', res = 400)
prey + cubs + plot_layout(ncol = 1)
dev.off()
png(file = 'Plots/prey_and_cub_mortality.png', width = 7, height = 7,
units = 'in', res = 400)
prey + cubs + plot_layout(ncol = 1)
dev.off()
png(file = 'Plots/prey_and_cub_mortality.png', width = 7.5, height = 7,
units = 'in', res = 400)
prey + cubs + plot_layout(ncol = 1)
dev.off()
known.mortality$mortality.plot <- factor(known.mortality$mortality, levels = c('death of mother', 'infanticide', 'lion', 'starvation', 'siblicide', 'human', 'other'),
labels = levels = c('death of\nmother', 'infanticide', 'lion', 'starvation', 'siblicide', 'human', 'other'))
known.mortality$mortality.plot <- factor(known.mortality$mortality, levels = c('death of mother', 'infanticide', 'lion', 'starvation', 'siblicide', 'human', 'other'),
labels = levels = c('death of\nmother', 'infanticide', 'lion', 'starvation', 'siblicide', 'human', 'other'))
known.mortality$mortality.plot <- factor(known.mortality$mortality, levels = c('death of mother', 'infanticide', 'lion', 'starvation', 'siblicide', 'human', 'other'),
labels = c('death of\nmother', 'infanticide', 'lion', 'starvation', 'siblicide', 'human', 'other'))
prey <- ggplot(data = known.mortality, aes(x = mortality.plot, y = prey_density))+
geom_boxplot(outlier.color = NA)+
theme_classic(base_size = 14) +
coord_cartesian(ylim= c(0,800))+
ylab('Average prey density')+
xlab('Mortality source')
cubs <- ggplot(data = known.mortality, aes(x = mortality.plot, y = cub_associates))+
geom_boxplot(outlier.color = NA)+
theme_classic(base_size = 14)+
ylab('Average number of cubs observed')+
xlab('Mortality source')
png(file = 'Plots/prey_and_cub_mortality.png', width = 7.5, height = 7,
units = 'in', res = 400)
prey + cubs + plot_layout(ncol = 1)
dev.off()
png(file = 'Plots/prey_and_cub_mortality.png', width = 7, height = 7,
units = 'in', res = 400)
prey + cubs + plot_layout(ncol = 1)
dev.off()
png(file = 'Plots/prey_and_cub_mortality.png', width = 7, height = 5,
units = 'in', res = 400)
prey + cubs + plot_layout(ncol = 1)
dev.off()
png(file = 'Plots/prey_and_cub_mortality.png', width = 7, height = 6,
units = 'in', res = 400)
prey + cubs + plot_layout(ncol = 1)
dev.off()
prey <- ggplot(data = known.mortality, aes(x = mortality.plot, y = prey_density))+
geom_boxplot(outlier.color = NA, color = 'grey30', size= 1, fill = 'grey85')+
theme_classic(base_size = 14) +
coord_cartesian(ylim= c(0,800))+
ylab('Average prey density')+
xlab('Mortality source')
cubs <- ggplot(data = known.mortality, aes(x = mortality.plot, y = cub_associates))+
geom_boxplot(outlier.color = NA, color = 'grey30', size= 1, fill = 'grey85')+
theme_classic(base_size = 14)+
ylab('Average number of cubs observed')+
xlab('Mortality source')
png(file = 'Plots/prey_and_cub_mortality.png', width = 7, height = 6,
units = 'in', res = 400)
prey + cubs + plot_layout(ncol = 1)
dev.off()
prey <- ggplot(data = known.mortality, aes(x = mortality.plot, y = prey_density))+
geom_boxplot(outlier.color = NA, color = 'grey30', size= 1, fill = 'grey85')+
theme_classic(base_size = 14) +
coord_cartesian(ylim= c(0,800))+
ylab('Average prey density')+
xlab('')
cubs <- ggplot(data = known.mortality, aes(x = mortality.plot, y = cub_associates))+
geom_boxplot(outlier.color = NA, color = 'grey30', size= 1, fill = 'grey85')+
theme_classic(base_size = 14)+
ylab('Average number of cubs observed')+
xlab('Mortality source')
png(file = 'Plots/prey_and_cub_mortality.png', width = 7, height = 6,
units = 'in', res = 400)
prey + cubs + plot_layout(ncol = 1)
dev.off()
prey <- ggplot(data = known.mortality, aes(x = mortality.plot, y = prey_density))+
geom_boxplot(outlier.color = NA, color = 'grey30', size= 1, fill = 'grey85')+
labs(subtitle = 'a)')+
theme_classic(base_size = 14) +
coord_cartesian(ylim= c(0,800))+
ylab('Average prey density')+
xlab('')
cubs <- ggplot(data = known.mortality, aes(x = mortality.plot, y = cub_associates))+
geom_boxplot(outlier.color = NA, color = 'grey30', size= 1, fill = 'grey85')+
labs(subtitle = 'b)')+
theme_classic(base_size = 14)+
ylab('Average number of cubs observed')+
xlab('Mortality source')
png(file = 'Plots/prey_and_cub_mortality.png', width = 7, height = 6,
units = 'in', res = 400)
prey + cubs + plot_layout(ncol = 1)
dev.off()
prey <- ggplot(data = known.mortality, aes(x = mortality.plot, y = prey_density))+
geom_boxplot(outlier.color = NA, color = 'grey30', size= 1, fill = 'grey85')+
labs(tags = 'a)')+
theme_classic(base_size = 14) +
coord_cartesian(ylim= c(0,800))+
ylab('Average prey density')+
xlab('')
cubs <- ggplot(data = known.mortality, aes(x = mortality.plot, y = cub_associates))+
geom_boxplot(outlier.color = NA, color = 'grey30', size= 1, fill = 'grey85')+
labs(tags = 'b)')+
theme_classic(base_size = 14)+
ylab('Average number of cubs observed')+
xlab('Mortality source')
png(file = 'Plots/prey_and_cub_mortality.png', width = 7, height = 6,
units = 'in', res = 400)
prey + cubs + plot_layout(ncol = 1)
dev.off()
prey <- ggplot(data = known.mortality, aes(x = mortality.plot, y = prey_density))+
geom_boxplot(outlier.color = NA, color = 'grey30', size= 1, fill = 'grey85')+
labs(tags = 'a)')+
theme_classic(base_size = 14) +
coord_cartesian(ylim= c(0,800))+
ylab('Average prey density')+
xlab('')
cubs <- ggplot(data = known.mortality, aes(x = mortality.plot, y = cub_associates))+
geom_boxplot(outlier.color = NA, color = 'grey30', size= 1, fill = 'grey85')+
labs(tags = 'b)')+
theme_classic(base_size = 14)+
ylab('Average number of cubs observed')+
xlab('Mortality source')
png(file = 'Plots/prey_and_cub_mortality.png', width = 7.5, height = 6,
units = 'in', res = 400)
prey + cubs + plot_layout(ncol = 1)
dev.off()
png(file = 'Plots/prey_and_cub_mortality.png', width = 6, height = 6,
units = 'in', res = 400)
prey + cubs + plot_layout(ncol = 1)
dev.off()
prey <- ggplot(data = known.mortality, aes(x = mortality.plot, y = prey_density))+
geom_boxplot(outlier.color = NA, color = 'grey30', size= 1, fill = 'grey85')+
labs(tags = 'A')+
theme_classic(base_size = 14) +
coord_cartesian(ylim= c(0,800))+
ylab('Average prey density')+
xlab('')
cubs <- ggplot(data = known.mortality, aes(x = mortality.plot, y = cub_associates))+
geom_boxplot(outlier.color = NA, color = 'grey30', size= 1, fill = 'grey85')+
labs(tags = 'B')+
theme_classic(base_size = 14)+
ylab('Average number of cubs observed')+
xlab('Mortality source')
png(file = 'Plots/prey_and_cub_mortality.png', width = 6, height = 6,
units = 'in', res = 400)
prey + cubs + plot_layout(ncol = 1)
dev.off()
prey <- ggplot(data = known.mortality, aes(x = mortality.plot, y = prey_density))+
geom_boxplot(outlier.color = NA, color = 'grey30', size= 1, fill = 'grey85')+
labs(tags = 'A')+
theme_classic(base_size = 14) +
coord_cartesian(ylim= c(0,800))+
ylab('Average prey density')+
xlab('')
cubs <- ggplot(data = known.mortality, aes(x = mortality.plot, y = cub_associates))+
geom_boxplot(outlier.color = NA, color = 'grey30', size= 1, fill = 'grey85')+
labs(tags = 'B')+
theme_classic(base_size = 14)+
ylab('Average cub density')+
xlab('Mortality source')
png(file = 'Plots/prey_and_cub_mortality.png', width = 6, height = 6,
units = 'in', res = 400)
prey + cubs + plot_layout(ncol = 1)
dev.off()
prey <- ggplot(data = known.mortality, aes(x = mortality.plot, y = prey_density))+
geom_boxplot(outlier.color = NA, color = 'grey30', size= 1, fill = 'grey85')+
labs(tags = 'a) ')+
theme_classic(base_size = 14) +
coord_cartesian(ylim= c(0,800))+
ylab('Average prey density')+
xlab('')
cubs <- ggplot(data = known.mortality, aes(x = mortality.plot, y = cub_associates))+
geom_boxplot(outlier.color = NA, color = 'grey30', size= 1, fill = 'grey85')+
labs(tags = 'b) ')+
theme_classic(base_size = 14)+
ylab('Average cub density')+
xlab('Mortality source')
png(file = 'Plots/prey_and_cub_mortality.png', width = 6, height = 6,
units = 'in', res = 400)
prey + cubs + plot_layout(ncol = 1)
dev.off()
prey <- ggplot(data = known.mortality, aes(x = mortality.plot, y = prey_density))+
geom_boxplot(outlier.color = NA, color = 'grey30', size= 1, fill = 'grey85')+
labs(tags = 'a) ')+
theme_classic(base_size = 14) +
coord_cartesian(ylim= c(0,800))+
ylab('Average prey density')+
xlab('')
cubs <- ggplot(data = known.mortality, aes(x = mortality.plot, y = cub_associates))+
geom_boxplot(outlier.color = NA, color = 'grey30', size= 1, fill = 'grey85')+
labs(tags = 'b) ')+
theme_classic(base_size = 14)+
ylab('Average cub density')+
xlab('Mortality source')
png(file = 'Plots/prey_and_cub_mortality.png', width = 7, height = 6,
units = 'in', res = 400)
prey + cubs + plot_layout(ncol = 1)
dev.off()
load('Data/age_model.RData')
load('Data/prey_and_cub_models.RData')
---
title: "Supplemental Material for "Infanticide
output: html
---
```{r setup, include=FALSE, echo = FALSE}
library(coda)
library(brms)
load('Data/age_model.RData')
load('Data/prey_and_cub_models.RData')
```
## Model detail and diagnostic for moratlity ~ age at death
Here we used a multinomial model of mortality source as a function of age at death
to understand the contribution of different mortality sources to overall mortality.
This model was initialized with weak, uninformative priors, and three chains were run for 15000 iterations each (7500 warmup).
#### Model summary
```{r age at death model - summary}
# Priors
prior_summary(fit)
summary(fit)
```
## Model diagnostics
Traceplots indicate convergence, and all R-hat values are equal to 1. Geweke's
diagnostic indicates that the chains achieved stability. Autocorrelation was minimal.
```{r age at death model - traceplots}
## Model checking
## For use with coda package
coda.model <- brms::as.mcmc(fit)
## Check for adequate convergence
gelman.diag(coda.model) ## Equals 1
traceplot(coda.model) ## Traceplots indicate convergence
geweke.diag(coda.model) ## All less extreme than 1.96
heidel.diag(coda.model)
autocorr.plot(coda.model) ## Autocorrelation looks fine
library(coda)
library(brms)
load('Data/age_model.RData')
load('Data/prey_and_cub_models.RData')
?traceplot
par(mfrow = c(3, 3))
traceplot(coda.model) ## Traceplots indicate convergence
rstan::traceplot(fit)
rstan::traceplot(coda.model)
plot(fit)
### Statistical test comparing ranks of killers and mothers
t.test(infanticide_notes$Mom_rank[!is.na(infanticide_notes$Mom_rank)],
infanticide_notes$Killer_rank[!is.na(infanticide_notes$Killer_rank)])
load(file = here('Data/cub_data.RData'))
load(file = here('Data/known_mortality_cleaned.RData'))
### add year to infanticide data
tblFemaleRanks$year <- as.numeric(tblFemaleRanks$year)
tblFemaleRanks$stan_rank <- as.numeric(tblFemaleRanks$stan_rank)
infanticide_notes$Mom_rank <- NA
infanticide_notes$Killer_rank <- NA
### Add killer and mother ranks
for(i in 1:nrow(infanticide_notes)){
mom <- infanticide_notes$Mom[i]
killer <- infanticide_notes$Killers[i]
date <- infanticide_notes$Date[i]
###mom rank
if(mom %in% filter(tblFemaleRanks, year == infanticide_notes[i,'Year'])$id){
infanticide_notes$Mom_rank[i] <- filter(tblFemaleRanks, year == infanticide_notes[i,'Year'],
id == mom)$stan_rank
}
##killer rank
if(killer %in% filter(tblFemaleRanks, year == infanticide_notes[i,'Year'])$id){
infanticide_notes$Killer_rank[i] <- filter(tblFemaleRanks, year == infanticide_notes[i,'Year'],
id == killer)$stan_rank
}
}
### Statistical test comparing ranks of killers and mothers
t.test(infanticide_notes$Mom_rank[!is.na(infanticide_notes$Mom_rank)],
infanticide_notes$Killer_rank[!is.na(infanticide_notes$Killer_rank)])
