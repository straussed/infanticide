###############Analyze Infant Mortality-Ally Brown 24 October, 2018##############
###Load libraries and set global options
library(tidyverse)
library(survminer)
options(stringsAsFactors = FALSE)
###Read and tidy data
known_mortality <- read.csv('L:\\CurrentGradStudents/StraussEli/Infanticide/Data/2.known_mortality.csv')
#known_mortality <- read.csv('/Volumes/Holekamp/CurrentGradStudents/StraussEli/Infanticide/known_mortality.csv')
unique(known_mortality$mortality)
known_mortality[known_mortality$mom == '3','mom'] <- '03'
table_hyena <- read.csv("C:/Users/a98br/Documents/Infanticide/tblHyenas.csv")
#table_hyena <- read.csv('/Volumes/Holekamp/CurrentGradStudents/StraussEli/Infanticide/Data/3.tblHyenas.csv')
table_hyena[table_hyena$id == '3','id'] <- '03'
table_hyena$disappeared <- as.Date(table_hyena$disappeared, "%d-%b-%y")
table_hyena$birthdate <- as.Date(table_hyena$birthdate, "%d-%b-%y")
###Determine portion of unknowns attributed to starvation
unknown<- filter(table_hyena, (mortality_source=="unknown"|mortality_source=='') & disappeared<birthdate+7*30)
unknown$mom_disappeared <- NA
for(i in 1:nrow(unknown)){
cub.mom <- unknown[i, "mom"]
if(cub.mom=="")next
date_disappeared <- unknown[i, "disappeared"]
mom_disappeared <- filter(table_hyena, id==cub.mom)$disappeared
if(!is.na(mom_disappeared) & mom_disappeared-date_disappeared <=0 & mom_disappeared-date_disappeared >= -90){
unknown$mom_disappeared[i]=TRUE
}else{
unknown$mom_disappeared[i]=FALSE
}
}
###Read and tidy data
known_mortality <- filter(known_mortality, mortality!="unknown")
known_mortality$disappeared <- as.Date(known_mortality$disappeared, "%m/%d/%y")
known_mortality$mom_disappeared <- NA
for(i in 1:nrow(known_mortality)){
cub.mom <- known_mortality[i, "mom"]
if(cub.mom=="")next
date_disappeared <- known_mortality[i, "disappeared"]
mom_disappeared <- filter(table_hyena, id==cub.mom)$disappeared
if(!is.na(mom_disappeared) & mom_disappeared-date_disappeared <=0 & mom_disappeared-date_disappeared >= -90){
known_mortality$mom_disappeared[i]=TRUE
}else{
known_mortality$mom_disappeared[i]=FALSE
}
}
###Plot frequency of mortality sources
summarized_mortality <- summarize(select(group_by(known_mortality,mortality),mortality),frequency = length(mortality))
summarized_mortality$frequency <- summarized_mortality$frequency/sum(summarized_mortality$frequency)
summarized_mortality <- arrange(summarized_mortality,desc(frequency))
barplot(names.arg=summarized_mortality$mortality,height = summarized_mortality$frequency, ylim = c(0,.5), main= "Summarized Cub Mortality", xlab= "Cause of Death" )
known_mortality_plotting <- known_mortality
known_mortality_plotting$mortality <- factor(known_mortality_plotting$mortality, levels = c("starvation", "infanticide", "lion", "human", "illness", "siblicide", "flooded den"))
png(file = 'L:/CurrentGradStudents/StraussEli/Infanticide/R images/Mortality_Source.png',width = 7.5, height = 4.5,
units = 'in', res = 400)
ggplot(data=known_mortality_plotting,aes(x=mortality, width=2))+
geom_bar(fill = rgb(red = 62, green = 118, blue = 73, maxColorValue = 255))+
theme_survminer()+
xlab("Source of Mortality")+
ylab("Percentage")
ggplot(data=known_mortality_plotting,aes(x=mortality, width=2))+
geom_bar(fill = rgb(red = 62, green = 118, blue = 73, maxColorValue = 255))+
theme_survminer()+
xlab("Source of Mortality")+
ylab("Percentage")
###Plot for cubs whose mom didn't die
summarized_mortality <- summarize(select(group_by(filter(known_mortality, mom_disappeared == FALSE),mortality),mortality),frequency = length(mortality))
### Bootstrap to get confidence interval
known_mortality_mom_alive <- filter(known_mortality, mom_disappeared==FALSE)
mortality.sources <- unique(known_mortality_mom_alive$mortality)
mortality.bootstraps <- matrix(data = NA, nrow = length(mortality.sources),
ncol = 1000, dimnames = list(mortality.sources, 1:1000))
for(i in 1:1000){
mortality.samples <- sample(replace = TRUE, known_mortality_mom_alive$mortality)
mortality.bootstraps[,i] <- table(mortality.samples)[mortality.sources]/length(mortality.samples)
}
nrow(filter(known_mortality, mom_disappeared == FALSE))
summarized_mortality$frequency <- summarized_mortality$frequency/sum(summarized_mortality$frequency)
summarized_mortality <- arrange(summarized_mortality,desc(frequency))
barplot(names.arg=summarized_mortality$mortality,height = summarized_mortality$frequency, ylim = c(0,.7), main= "Summarized Cub Mortality With Mom Living", xlab= "Cause of Death" )
